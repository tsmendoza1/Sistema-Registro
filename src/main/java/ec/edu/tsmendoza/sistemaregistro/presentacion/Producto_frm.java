/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ec.edu.tsmendoza.sistemaregistro.presentacion;

import ec.edu.tsmendoza.sistemaregistro.negocio.ProductoServicio;
import java.awt.Color;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import modelo.Producto;

/**
 *
 * @author Dell Inspiron 16
 */
public class Producto_frm extends javax.swing.JInternalFrame {

    /**
     * Creates new form Producto_frm
     */
    private ProductoServicio servicio;
    public static DefaultTableModel modelo;
    private List<Producto> listadoProductos;

    public Producto_frm() {
        initComponents();
        servicio = new ProductoServicio();
        List<Producto> lista = servicio.ObtenerProducto();
        mostrarDatos(lista);
    }

    private void mostrarDatos(List<Producto> listaProductos) {
        listadoProductos = listaProductos;
        modelo = new DefaultTableModel();
        modelo.addColumn("Codigo");
        modelo.addColumn("Modelo");
        modelo.addColumn("Precio");

        for (Producto prod : listaProductos) {
            Object[] fila = {prod.getCodigo(), prod.getNombre(), prod.getPrecio()};
            modelo.addRow(fila);
        }
        tbl_producto.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        butt_agregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_producto = new javax.swing.JTable();
        butt_eliminar = new javax.swing.JButton();
        butt_actualizar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Producto");
        setToolTipText("");

        jLabel1.setText("Codigo:");

        jLabel2.setText("Modelo:");

        jLabel3.setText("Precio:");

        butt_agregar.setText("Agregar");
        butt_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_agregarActionPerformed(evt);
            }
        });

        tbl_producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbl_producto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_productoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_producto);

        butt_eliminar.setText("Eliminar");
        butt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_eliminarActionPerformed(evt);
            }
        });

        butt_actualizar.setText("Actualizar");
        butt_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_actualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_codigo)
                            .addComponent(txt_nombre)
                            .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(butt_agregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(butt_eliminar))
                    .addComponent(butt_actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(butt_agregar)
                            .addComponent(butt_eliminar))
                        .addGap(30, 30, 30)
                        .addComponent(butt_actualizar)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butt_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_agregarActionPerformed
        Runtime.getRuntime().gc();

        if (ValidarFormulario()) {

            Runtime runtime = Runtime.getRuntime();
            long memoriaAntes = runtime.totalMemory() - runtime.freeMemory();

            int cantidadProductos = 10;  
            long inicio = System.currentTimeMillis();
            AgregarProducto();  

            long fin = System.currentTimeMillis();
            long tiempoTotal = fin - inicio;

            System.out.println("Throughput: " + (cantidadProductos * 1000.0 / tiempoTotal) + " productos por segundo");

            long memoriaDespues = runtime.totalMemory() - runtime.freeMemory();

            long diferenciaMemoria = memoriaDespues - memoriaAntes;

            System.out.println("Memoria utilizada para agregar productos: " + (diferenciaMemoria / (1024 * 1024)) + " MB");

            LimpiarFormulario();
        } else {
            
            JOptionPane.showMessageDialog(null,
                    "Debe completar todos los campos obligatorios.",
                    "Advertencia",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_butt_agregarActionPerformed

    private void butt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_eliminarActionPerformed
        // Se obtiene el id seleccionado de la tabla
        int filaSeleccionada = tbl_producto.getSelectedRow();

        // Se valdia que la fila seleccionada sea superior a cero 
        if (filaSeleccionada >= 0) {
            // Confirmar antes de eliminar
            int confirmacion = JOptionPane.showConfirmDialog(null,
                    "¿Estás seguro de eliminar este producto?",
                    "Confirmar eliminación",
                    JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {
                int idProducto = listadoProductos.get(filaSeleccionada).getId();
                System.out.println("El id" + idProducto);

                boolean eliminado = servicio.EliminarProductoPorId(idProducto);

                if (eliminado) {
                    JOptionPane.showMessageDialog(null, "Persona eliminada correctamente.");
                    List<Producto> listadoProductos = servicio.ObtenerProducto();
                    mostrarDatos(listadoProductos);
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar la persona.");
                }
            }
        }
    }//GEN-LAST:event_butt_eliminarActionPerformed

    private void llenarFormularioDesdeTabla() {
        int filaSeleccionada = tbl_producto.getSelectedRow();

        if (filaSeleccionada >= 0) {
            // Obtenemos el objeto Persona desde la lista
            Producto personaSeleccionada = listadoProductos.get(filaSeleccionada);

            txt_nombre.setText(personaSeleccionada.getNombre());
            txt_codigo.setText(personaSeleccionada.getCodigo());
            txt_precio.setText(personaSeleccionada.getPrecio().toString());
        }
    }

    private void butt_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_actualizarActionPerformed
        // Se obtiene el id seleccionado de la tabla
        int filaSeleccionada = tbl_producto.getSelectedRow();
        // Se valdia que la fila seleccionada sea superior a cero 
        if (filaSeleccionada >= 0) {

            // Si el formulario esta lleno proceder a enviarlo a la capa de negocio
            if (ValidarFormulario()) {
                String nombre = txt_nombre.getText();
                String codigo = txt_codigo.getText();
                Double precio = Double.parseDouble(txt_precio.getText());

                Producto actualizarProducto = new Producto(codigo, nombre, precio);

                int idPersona = listadoProductos.get(filaSeleccionada).getId();

                boolean actualizado = servicio.ActualizarProducto(idPersona, actualizarProducto);

                if (actualizado) {
                    JOptionPane.showMessageDialog(null,
                            "Registro actualizado.",
                            "Información",
                            JOptionPane.INFORMATION_MESSAGE);
                    List<Producto> lista = servicio.ObtenerProducto();
                    mostrarDatos(lista);
                    LimpiarFormulario();
                } else {
                    JOptionPane.showMessageDialog(null,
                            "No se pudo actualizar el registro.",
                            "Advertencia",
                            JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_butt_actualizarActionPerformed

    private void tbl_productoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_productoMouseClicked
        llenarFormularioDesdeTabla();
    }//GEN-LAST:event_tbl_productoMouseClicked

    public void LimpiarFormulario() {
        txt_codigo.setText("");
        txt_nombre.setText("");
        txt_precio.setText("");
    }

    public boolean ValidarFormulario() {
        Border bordeRojo = BorderFactory.createLineBorder(Color.RED, 2);
        Border bordeNegro = BorderFactory.createLineBorder(Color.BLACK, 2);

        txt_codigo.setBorder(txt_codigo.getText().trim().isEmpty() ? bordeRojo : bordeNegro);
        txt_precio.setBorder(txt_precio.getText().trim().isEmpty() ? bordeRojo : bordeNegro);
        txt_nombre.setBorder(txt_nombre.getText().trim().isEmpty() ? bordeRojo : bordeNegro);

        return !(txt_codigo.getText().trim().isEmpty()
                || txt_precio.getText().trim().isEmpty()
                || txt_nombre.getText().trim().isEmpty());
    }

    private void AgregarProducto() {

        String nombre = txt_nombre.getText();
        String codigo = txt_codigo.getText();
        String precioStr = txt_precio.getText();

        // Validar que el campo de precio no esté vacío y sea un número válido
        if (precioStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El precio no puede estar vacío.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return; // Salir si el precio es vacío
        }

        Double precio = 0.0;
        try {
            precio = Double.parseDouble(precioStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El precio debe ser un número válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return; // Salir si el formato no es válido
        }

        Producto nuevoProducto = new Producto(codigo, nombre, precio);

        // [0] Ya existe el producto, [1] Registro exitoso, [2] Error interno
        int registro = servicio.AgregarNuevoProducto(nuevoProducto);

        switch (registro) {
            case 0:
                JOptionPane.showMessageDialog(null,
                        "Ya existe el producto con ese código.",
                        "Advertencia",
                        JOptionPane.WARNING_MESSAGE);
                break;

            case 1:
                JOptionPane.showMessageDialog(null,
                        "Registro exitoso.",
                        "Información",
                        JOptionPane.INFORMATION_MESSAGE);
                // Se procede a actualizar la tabla de registro y limpiar el formulario
                List<Producto> lista = servicio.ObtenerProducto();
                mostrarDatos(lista);
                //LimpiarFormulario();
                break;

            case 2:
                JOptionPane.showMessageDialog(null,
                        "Error interno, inténtelo más tarde.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                break;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butt_actualizar;
    private javax.swing.JButton butt_agregar;
    private javax.swing.JButton butt_eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_producto;
    private javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables
}
